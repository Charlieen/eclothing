{"ast":null,"code":"import { ShopActionsDIC } from './shop.types';\nimport firebase, { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\n\nconst startFetchCollections = () => ({\n  type: ShopActionsDIC.FETCH_COLLECTIONS_START\n});\n\nconst fetchCollectionsSuccess = collections => ({\n  type: ShopActionsDIC.FETCH_COLLECTIONS_SUCCESS,\n  payload: collections\n});\n\nconst fetchCollectionsFailure = () => ({\n  type: ShopActionsDIC.FETCH_COLLECTIONS_FAILURE\n});\n\nconst changeArrayToObject = shopItems => {\n  const test = shopItems.reduce((result, item) => ({ ...result,\n    [`${item.routeName}`]: item\n  }), {});\n  const test2 = shopItems.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n  console.log(test);\n  return test;\n};\n\nexport const fetchCollections = () => dispatch => {\n  console.log('fetchCollection is running...');\n  dispatch(startFetchCollections());\n  const collcectionRef = firebase.firestore().collection('collections');\n  collcectionRef.onSnapshot(async snapshot => {\n    const result = convertCollectionsSnapshotToMap(snapshot);\n    const resultObject = changeArrayToObject(result);\n    dispatch(fetchCollectionsSuccess(resultObject));\n  }, onError => {\n    console.log(onError.message);\n    dispatch(fetchCollectionsFailure());\n  });\n};","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/redux/shop/shop.actions.js"],"names":["ShopActionsDIC","firebase","firestore","convertCollectionsSnapshotToMap","startFetchCollections","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collections","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","FETCH_COLLECTIONS_FAILURE","changeArrayToObject","shopItems","test","reduce","result","item","routeName","test2","acc","collection","title","toLowerCase","console","log","fetchCollections","dispatch","collcectionRef","onSnapshot","snapshot","resultObject","onError","message"],"mappings":"AAAA,SAASA,cAAT,QAA8B,cAA9B;AACA,OAAOC,QAAP,IAAiBC,SAAjB,EAA2BC,+BAA3B,QAAiE,8BAAjE;;AAEC,MAAMC,qBAAqB,GAAG,OAAM;AACjCC,EAAAA,IAAI,EAACL,cAAc,CAACM;AADa,CAAN,CAA9B;;AAIA,MAAMC,uBAAuB,GAAIC,WAAD,KAAiB;AAC9CH,EAAAA,IAAI,EAACL,cAAc,CAACS,yBAD0B;AAE9CC,EAAAA,OAAO,EAACF;AAFsC,CAAjB,CAAhC;;AAIA,MAAMG,uBAAuB,GAAG,OAAM;AACnCN,EAAAA,IAAI,EAACL,cAAc,CAACY;AADe,CAAN,CAAhC;;AAMD,MAAMC,mBAAmB,GAAEC,SAAD,IAAc;AAEpC,QAAMC,IAAI,GAAED,SAAS,CAACE,MAAV,CAAiB,CAACC,MAAD,EAAQC,IAAR,MAAkB,EAAC,GAAGD,MAAJ;AAAW,KAAE,GAAEC,IAAI,CAACC,SAAU,EAAnB,GAAsBD;AAAjC,GAAlB,CAAjB,EAA4E,EAA5E,CAAZ;AAEA,QAAME,KAAK,GAAGN,SAAS,CAACE,MAAV,CAAiB,CAACK,GAAD,EAAKC,UAAL,KAAmB;AAC/CD,IAAAA,GAAG,CAACC,UAAU,CAACC,KAAX,CAAiBC,WAAjB,EAAD,CAAH,GAAqCF,UAArC;AACA,WAAOD,GAAP;AACF,GAHa,EAGZ,EAHY,CAAd;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,SAAOA,IAAP;AACF,CAXF;;AAcA,OAAO,MAAMY,gBAAgB,GAAG,MAAMC,QAAQ,IAAI;AAC1CH,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAE,EAAAA,QAAQ,CAACxB,qBAAqB,EAAtB,CAAR;AAEA,QAAMyB,cAAc,GAAG5B,QAAQ,CAACC,SAAT,GAAqBoB,UAArB,CAAgC,aAAhC,CAAvB;AAEAO,EAAAA,cAAc,CAACC,UAAf,CAA4B,MAAMC,QAAN,IAAkB;AAE5C,UAAMd,MAAM,GAAGd,+BAA+B,CAAC4B,QAAD,CAA9C;AACA,UAAMC,YAAY,GAAGnB,mBAAmB,CAACI,MAAD,CAAxC;AACAW,IAAAA,QAAQ,CAACrB,uBAAuB,CAACyB,YAAD,CAAxB,CAAR;AACD,GALD,EAMAC,OAAO,IAAG;AACNR,IAAAA,OAAO,CAACC,GAAR,CAAYO,OAAO,CAACC,OAApB;AACAN,IAAAA,QAAQ,CAACjB,uBAAuB,EAAxB,CAAR;AACH,GATD;AAWP,CAjBM","sourcesContent":["import { ShopActionsDIC }from './shop.types';\nimport firebase,{firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.util';\n\n const startFetchCollections = () =>({\n    type:ShopActionsDIC.FETCH_COLLECTIONS_START\n\n})\n const fetchCollectionsSuccess = (collections) =>({\n    type:ShopActionsDIC.FETCH_COLLECTIONS_SUCCESS,\n    payload:collections\n})\n const fetchCollectionsFailure = () =>({\n    type:ShopActionsDIC.FETCH_COLLECTIONS_FAILURE\n\n})\n\n\nconst changeArrayToObject=(shopItems)=> {\n     \n    const test= shopItems.reduce((result,item) => ({...result,[`${item.routeName}`]:item }),{});\n\n    const test2 = shopItems.reduce((acc,collection)=> {\n       acc[collection.title.toLowerCase()]= collection;\n       return acc;\n    },{})\n\n    console.log(test);\n    return test;\n }\n\n\nexport const fetchCollections = () => dispatch => {\n        console.log('fetchCollection is running...');\n        dispatch(startFetchCollections());\n\n        const collcectionRef = firebase.firestore().collection('collections');\n   \n        collcectionRef.onSnapshot ( async snapshot => {\n\n          const result = convertCollectionsSnapshotToMap(snapshot);\n          const resultObject = changeArrayToObject(result);\n          dispatch(fetchCollectionsSuccess(resultObject));\n        },\n        onError =>{\n            console.log(onError.message);\n            dispatch(fetchCollectionsFailure());\n        }\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}