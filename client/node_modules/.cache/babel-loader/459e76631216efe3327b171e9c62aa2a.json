{"ast":null,"code":"var _jsxFileName = \"/Users/dzgygmdhx/work/react-course/ecloth/src/components/cart/Cart.js\";\nimport React, { Component } from 'react';\nimport Title from './Title';\nimport CartColumns from './CartColumns';\nimport CartList from './CartList';\nimport CartTotal from './CartTotal';\nimport { connect } from 'react-redux';\nimport { getAllItems } from '../../redux/shop/shop.actions';\n\nclass Cart extends Component {\n  componentDidMount() {\n    this.props.getAllItems();\n  }\n\n  render() {\n    const {\n      cItemsCount,\n      cartItems\n    } = this.props.shop;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      name: \"your\",\n      title: \"cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CartColumns, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CartList, {\n      value: cartItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CartTotal, {\n      value: cItemsCount,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  shop: state.shop\n});\n\nconst mapActionToProps = {};\nexport default connect(mapStateToProps, {\n  getAllItems\n})(Cart);","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/components/cart/Cart.js"],"names":["React","Component","Title","CartColumns","CartList","CartTotal","connect","getAllItems","Cart","componentDidMount","props","render","cItemsCount","cartItems","shop","history","mapStateToProps","state","mapActionToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,OAAT,QAAuB,aAAvB;AACA,SAASC,WAAT,QAA2B,+BAA3B;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAEzBQ,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWH,WAAX;AACH;;AACDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAA0B,KAAKH,KAAL,CAAWI,IAA3C;AACA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAED,WAAlB;AACC,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWK,OADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADJ;AASH;;AAhBwB;;AAkB7B,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC7BH,EAAAA,IAAI,EAACG,KAAK,CAACH;AADkB,CAAJ,CAA7B;;AAGA,MAAMI,gBAAgB,GAAG,EAAzB;AAEA,eAAeZ,OAAO,CAACU,eAAD,EAAiB;AAACT,EAAAA;AAAD,CAAjB,CAAP,CAAuCC,IAAvC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Title from './Title';\nimport CartColumns from './CartColumns';\nimport CartList from './CartList';\nimport CartTotal from './CartTotal';\n\nimport { connect }from 'react-redux';\nimport { getAllItems }from '../../redux/shop/shop.actions';\n\nclass Cart extends Component {\n\n    componentDidMount(){\n        this.props.getAllItems();\n    }\n    render() {\n        const {cItemsCount,cartItems} = this.props.shop;\n        return (\n            <React.Fragment>\n            <Title name=\"your\" title=\"cart\"/>   \n            <CartColumns/>\n            <CartList value={cartItems}/>\n            <CartTotal value={cItemsCount}\n             history={this.props.history}/>\n           </React.Fragment>                           \n        )\n    }\n}\nconst mapStateToProps = state =>({\n    shop:state.shop\n})\nconst mapActionToProps = {}\n\nexport default connect(mapStateToProps,{getAllItems})(Cart);\n\n"]},"metadata":{},"sourceType":"module"}