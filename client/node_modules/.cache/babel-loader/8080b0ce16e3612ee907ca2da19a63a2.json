{"ast":null,"code":"import CartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst _addItem_groupWay = (item, state) => {\n  debugger;\n  const itemExist = state.cartItems.find(i => i.id === item.id);\n  let itemUpdate = itemExist ? { ...itemExist,\n    count: itemExist.count + 1\n  } : { ...item,\n    count: 1\n  };\n\n  if (itemExist) {\n    return state.cartItems.map(item => {\n      if (item.id === itemUpdate.id) {\n        return { ...item,\n          count: itemUpdate.count\n        };\n      } else {\n        return item;\n      }\n    });\n  } else {\n    return [...state.cartItems, itemUpdate];\n  }\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: _addItem_groupWay(action.payload, state)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","INITIAL_STATE","hidden","cartItems","_addItem_groupWay","item","state","itemExist","find","i","id","itemUpdate","count","map","cartReducer","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAE;AACjBC,EAAAA,MAAM,EAAC,IADU;AAEjBC,EAAAA,SAAS,EAAC;AAFO,CAArB;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAMC,KAAN,KAAe;AACrC;AACA,QAAMC,SAAS,GAAGD,KAAK,CAACH,SAAN,CAAgBK,IAAhB,CAAqBC,CAAC,IAAGA,CAAC,CAACC,EAAF,KAASL,IAAI,CAACK,EAAvC,CAAlB;AAEA,MAAIC,UAAU,GAAGJ,SAAS,GAAG,EAAC,GAAGA,SAAJ;AAAeK,IAAAA,KAAK,EAAEL,SAAS,CAACK,KAAV,GAAiB;AAAvC,GAAH,GAA6C,EAAC,GAAGP,IAAJ;AAASO,IAAAA,KAAK,EAAC;AAAf,GAAvE;;AAEA,MAAGL,SAAH,EAAa;AACT,WAAQD,KAAK,CAACH,SAAN,CAAgBU,GAAhB,CAAoBR,IAAI,IAAG;AAC/B,UAAGA,IAAI,CAACK,EAAL,KAAYC,UAAU,CAACD,EAA1B,EAA6B;AACzB,eAAO,EAAC,GAAGL,IAAJ;AAASO,UAAAA,KAAK,EAACD,UAAU,CAACC;AAA1B,SAAP;AACH,OAFD,MAEM;AACF,eAAOP,IAAP;AACH;AACJ,KANO,CAAR;AAOH,GARD,MAQM;AACF,WAAO,CAAC,GAAGC,KAAK,CAACH,SAAV,EAAoBQ,UAApB,CAAP;AACH;AAGJ,CAnBD;;AAsBA,MAAMG,WAAW,GAAG,CAACR,KAAK,GAAEL,aAAR,EAAwBc,MAAxB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,eAAe,CAACiB,kBAArB;AACI,aAAO,EACH,GAAGX,KADA;AAEHJ,QAAAA,MAAM,EAAE,CAACI,KAAK,CAACJ;AAFZ,OAAP;;AAIJ,SAAKF,eAAe,CAACkB,QAArB;AACI,aAAM,EACF,GAAGZ,KADD;AAEFH,QAAAA,SAAS,EAAEC,iBAAiB,CAACW,MAAM,CAACI,OAAR,EAAgBb,KAAhB;AAF1B,OAAN;;AAKJ;AACI,aAAOA,KAAP;AAbR;AAeH,CAhBD;;AAkBA,eAAeQ,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\n\nconst INITIAL_STATE ={\n    hidden:true,\n    cartItems:[]\n};\nconst _addItem_groupWay = (item,state) =>{\n    debugger;\n    const itemExist = state.cartItems.find(i =>i.id === item.id);\n\n    let itemUpdate = itemExist ? {...itemExist, count: itemExist.count +1}:{...item,count:1};\n    \n    if(itemExist){\n        return  state.cartItems.map(item =>{\n            if(item.id === itemUpdate.id){\n                return {...item,count:itemUpdate.count}\n            }else {\n                return item;\n            }\n        });\n    }else {\n        return [...state.cartItems,itemUpdate];\n    }\n\n\n}\n\n\nconst cartReducer = (state= INITIAL_STATE , action) =>{\n    switch (action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            };\n        case CartActionTypes.ADD_ITEM:\n            return{\n                ...state,\n                cartItems: _addItem_groupWay(action.payload,state)\n            }    \n    \n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}