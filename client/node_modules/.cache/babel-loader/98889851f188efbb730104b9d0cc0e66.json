{"ast":null,"code":"import { take, takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.util';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure, setCurrentUser, signUpStart, signUpSuccess, signUpFailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    googleProvider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n} // event.preventDefault();\n// const {email,password} = this.state;\n// auth.signInWithEmailAndPassword(email,password)\n// .then(()=>{\n//     this.setState({email:'',password:''});\n//     this.props.history.push('/');\n// })\n// .catch(e=>console.log(e));\n\nexport function* signInWithEmail(emailAndPassword) {\n  try {\n    console.log('signInWithEmail....'); //debugger;\n\n    const {\n      user: {\n        email,\n        displayName,\n        uid\n      }\n    } = yield auth.signInWithEmailAndPassword(emailAndPassword.payload.email, emailAndPassword.payload.password);\n    console.log(uid);\n    const userRef = yield call(createUserProfileDocument, {\n      email,\n      displayName,\n      uid\n    });\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* signOut() {\n  yield auth.signOut();\n  yield put(setCurrentUser(null));\n}\nexport function* signUp(user) {\n  console.log(user);\n  const {\n    email,\n    password\n  } = user;\n\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    console.log(user);\n    const userRef = yield call(createUserProfileDocument, {\n      user\n    });\n    const userSnapshot = yield userRef.get();\n    put(signUpSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOut() {\n  yield takeLatest(UserActionTypes.SIGN_OUT, signOut);\n}\nexport function* onSignUp() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignOut), call(onSignUp)]);\n}","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/redux/user/user.sagas.js"],"names":["take","takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","setCurrentUser","signUpStart","signUpSuccess","signUpFailure","signInWithGoogle","setCustomParameters","prompt","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","emailAndPassword","console","log","email","displayName","uid","signInWithEmailAndPassword","payload","password","signOut","signUp","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOut","SIGN_OUT","onSignUp","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {take,takeLatest ,put ,all ,call } from 'redux-saga/effects';\nimport  {UserActionTypes} from './user.types';\nimport {auth, googleProvider , createUserProfileDocument } from '../../firebase/firebase.util';\nimport {googleSignInSuccess,\n     googleSignInFailure, \n     emailSignInSuccess,\n      emailSignInFailure ,\n      setCurrentUser ,\n      signUpStart,\n      signUpSuccess,\n      signUpFailure\n    } from './user.action';\n\n\nexport function* signInWithGoogle () {\n    try {   \n        googleProvider.setCustomParameters({ prompt: 'select_account'});\n       const { user } = yield auth.signInWithPopup(googleProvider);\n       const userRef = yield call(createUserProfileDocument,user);\n       const userSnapshot = yield userRef.get();\n\n      yield put(googleSignInSuccess({\n           id:userSnapshot.id, ...userSnapshot.data()\n       }));\n\n    } catch (error) {\n       yield put(googleSignInFailure(error))\n    }\n}\n\n// event.preventDefault();\n// const {email,password} = this.state;\n// auth.signInWithEmailAndPassword(email,password)\n// .then(()=>{\n//     this.setState({email:'',password:''});\n//     this.props.history.push('/');\n// })\n// .catch(e=>console.log(e));\n\nexport function* signInWithEmail(emailAndPassword){\n\n    try {\n        console.log('signInWithEmail....');\n        //debugger;\n        const {user:{email,displayName,uid}} = yield auth.signInWithEmailAndPassword(emailAndPassword.payload.email,emailAndPassword.payload.password);\n        console.log(uid);\n        const userRef = yield call(createUserProfileDocument,{email,displayName,uid});\n        const userSnapshot = yield userRef.get();\n        \n        yield put(emailSignInSuccess({\n            id:userSnapshot.id,...userSnapshot.data()\n        }));\n\n    } catch (error) {\n        yield put(emailSignInFailure(error));\n    }\n}\nexport function* signOut(){\n    yield auth.signOut();\n    yield put(setCurrentUser(null));\n}\n\nexport function* signUp(user){\n\n    console.log(user);\n    const{email,password} = user;\n    try {\n        const {user} = yield auth.createUserWithEmailAndPassword(email,password);\n        console.log(user);\n        const userRef = yield call(createUserProfileDocument,{user});\n        const userSnapshot = yield userRef.get();\n        put(signUpSuccess({\n            id:userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    } catch (error) {\n        put(signUpFailure(error));\n    }\n  \n\n\n\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n}\n\nexport function* onSignOut(){\n    yield takeLatest(UserActionTypes.SIGN_OUT,signOut);\n}\nexport function* onSignUp(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp);\n}\n\nexport function* userSagas(){\n   yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onSignOut),\n        call(onSignUp)\n    ]);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}