{"ast":null,"code":"import CartActionTypes from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst _addItem_groupWay = (item, state) => {\n  const itemExist = state.cartItems.find(i => i.id === item.id);\n\n  if (itemExist) {\n    return { ...itemExist,\n      count: itemExist.count + 1\n    };\n  } else {\n    return { ...item,\n      count: 1\n    };\n  }\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: _addItem_groupWay(action.payload, state)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","INITIAL_STATE","hidden","cartItems","_addItem_groupWay","item","state","itemExist","find","i","id","count","cartReducer","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAE;AACjBC,EAAAA,MAAM,EAAC,IADU;AAEjBC,EAAAA,SAAS,EAAC;AAFO,CAArB;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAMC,KAAN,KAAe;AAErC,QAAMC,SAAS,GAAGD,KAAK,CAACH,SAAN,CAAgBK,IAAhB,CAAqBC,CAAC,IAAGA,CAAC,CAACC,EAAF,KAASL,IAAI,CAACK,EAAvC,CAAlB;;AACA,MAAGH,SAAH,EAAa;AACT,WAAO,EAAC,GAAGA,SAAJ;AAAeI,MAAAA,KAAK,EAAEJ,SAAS,CAACI,KAAV,GAAiB;AAAvC,KAAP;AACH,GAFD,MAEM;AACF,WAAO,EAAC,GAAGN,IAAJ;AAASM,MAAAA,KAAK,EAAC;AAAf,KAAP;AACH;AACJ,CARD;;AAWA,MAAMC,WAAW,GAAG,CAACN,KAAK,GAAEL,aAAR,EAAwBY,MAAxB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,eAAe,CAACe,kBAArB;AACI,aAAO,EACH,GAAGT,KADA;AAEHJ,QAAAA,MAAM,EAAE,CAACI,KAAK,CAACJ;AAFZ,OAAP;;AAIJ,SAAKF,eAAe,CAACgB,QAArB;AACI,aAAM,EACF,GAAGV,KADD;AAEFH,QAAAA,SAAS,EAACC,iBAAiB,CAACS,MAAM,CAACI,OAAR,EAAgBX,KAAhB;AAFzB,OAAN;;AAKJ;AACI,aAAOA,KAAP;AAbR;AAeH,CAhBD;;AAkBA,eAAeM,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\n\nconst INITIAL_STATE ={\n    hidden:true,\n    cartItems:[]\n};\nconst _addItem_groupWay = (item,state) =>{\n\n    const itemExist = state.cartItems.find(i =>i.id === item.id);\n    if(itemExist){\n        return {...itemExist, count: itemExist.count +1};\n    }else {\n        return {...item,count:1};\n    }\n}\n\n\nconst cartReducer = (state= INITIAL_STATE , action) =>{\n    switch (action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            };\n        case CartActionTypes.ADD_ITEM:\n            return{\n                ...state,\n                cartItems:_addItem_groupWay(action.payload,state)\n            }    \n    \n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}