{"ast":null,"code":"import { ShopActionsDIC } from './shop.types';\nimport SHOP_DATA from '../../data/shop.data';\nconst initialShop = {\n  shopItems: SHOP_DATA,\n  routeName: '',\n  cartItems: [],\n  cCurrentItem: null,\n  cItemsCount: 0,\n  cTotalPrice: 0\n};\n\nconst _updateShopItems = (shopItems, action) => {\n  const categroy = shopItems.find(item => item.routeName === action.payload.routeName);\n  const items = categroy.items.map(item => {\n    if (item.id === action.payload.id) {\n      return { ...item,\n        count: 1,\n        inCart: true\n      };\n    } else {\n      return { ...item\n      };\n    }\n  });\n  return { ...categroy,\n    items: items\n  };\n};\n\nconst shopReducer = (state = initialShop, action) => {\n  switch (action.type) {\n    case ShopActionsDIC.INT_SHOP_ITEMS:\n      return state;\n\n    case ShopActionsDIC.ADD_ITEM_TO_CART:\n      return { ...state,\n        shopItems: state.shopItems.map(categroy => {\n          if (categroy.routeName === action.payload.routeName) {\n            return _updateShopItems(state.shopItems, action);\n          } else return categroy;\n        }),\n        cartItems: [...state.cartItems, { ...action.payload,\n          count: 1,\n          inCart: true\n        }],\n        cItemsCount: state.cItemsCount + 1,\n        cTotalPrice: state.cTotalPrice + action.payload.price\n      };\n\n    case ShopActionsDIC.GET_ALL_ITEMS:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/redux/shop/shop.reducer.js"],"names":["ShopActionsDIC","SHOP_DATA","initialShop","shopItems","routeName","cartItems","cCurrentItem","cItemsCount","cTotalPrice","_updateShopItems","action","categroy","find","item","payload","items","map","id","count","inCart","shopReducer","state","type","INT_SHOP_ITEMS","ADD_ITEM_TO_CART","price","GET_ALL_ITEMS"],"mappings":"AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,OAAOC,SAAP,MAAuB,sBAAvB;AAEA,MAAMC,WAAW,GAAE;AACfC,EAAAA,SAAS,EAACF,SADK;AAEfG,EAAAA,SAAS,EAAC,EAFK;AAGfC,EAAAA,SAAS,EAAC,EAHK;AAIfC,EAAAA,YAAY,EAAC,IAJE;AAKfC,EAAAA,WAAW,EAAC,CALG;AAMfC,EAAAA,WAAW,EAAC;AANG,CAAnB;;AAQA,MAAMC,gBAAgB,GAAG,CAACN,SAAD,EAAWO,MAAX,KAAoB;AAE1C,QAAMC,QAAQ,GAAGR,SAAS,CAACS,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACT,SAAL,KAAmBM,MAAM,CAACI,OAAP,CAAeV,SAAzD,CAAjB;AACA,QAAMW,KAAK,GAAGJ,QAAQ,CAACI,KAAT,CAAeC,GAAf,CAAmBH,IAAI,IAAG;AACnC,QAAGA,IAAI,CAACI,EAAL,KAAYP,MAAM,CAACI,OAAP,CAAeG,EAA9B,EAAiC;AAC7B,aAAO,EACH,GAAGJ,IADA;AAEHK,QAAAA,KAAK,EAAC,CAFH;AAGHC,QAAAA,MAAM,EAAC;AAHJ,OAAP;AAKH,KAND,MAMM;AACF,aAAO,EACH,GAAGN;AADA,OAAP;AAGH;AACJ,GAZY,CAAd;AAaA,SAAO,EAAC,GAAGF,QAAJ;AAAaI,IAAAA,KAAK,EAACA;AAAnB,GAAP;AACF,CAjBD;;AAmBC,MAAMK,WAAW,GAAG,CAACC,KAAK,GAAGnB,WAAT,EAAuBQ,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACY,IAAf;AACI,SAAKtB,cAAc,CAACuB,cAApB;AACI,aAAOF,KAAP;;AAEJ,SAAKrB,cAAc,CAACwB,gBAApB;AACA,aAAO,EACH,GAAGH,KADA;AAEHlB,QAAAA,SAAS,EAAEkB,KAAK,CAAClB,SAAN,CAAgBa,GAAhB,CAAoBL,QAAQ,IAAG;AACtC,cAAGA,QAAQ,CAACP,SAAT,KAAuBM,MAAM,CAACI,OAAP,CAAeV,SAAzC,EAAmD;AAC/C,mBAAOK,gBAAgB,CAACY,KAAK,CAAClB,SAAP,EAAiBO,MAAjB,CAAvB;AACH,WAFD,MAEM,OAAOC,QAAP;AAET,SALU,CAFR;AAQHN,QAAAA,SAAS,EAAC,CAAC,GAAGgB,KAAK,CAAChB,SAAV,EAAoB,EAAC,GAAGK,MAAM,CAACI,OAAX;AAAmBI,UAAAA,KAAK,EAAC,CAAzB;AAA2BC,UAAAA,MAAM,EAAC;AAAlC,SAApB,CARP;AASHZ,QAAAA,WAAW,EAACc,KAAK,CAACd,WAAN,GAAmB,CAT5B;AAUHC,QAAAA,WAAW,EAAEa,KAAK,CAACb,WAAN,GAAoBE,MAAM,CAACI,OAAP,CAAeW;AAV7C,OAAP;;AAYA,SAAKzB,cAAc,CAAC0B,aAApB;AACI,aAAOL,KAAP;;AAEJ;AACI,aAAOA,KAAP;AArBR;AAuBH,CAxBA;;AA0BD,eAAeD,WAAf","sourcesContent":["import { ShopActionsDIC } from './shop.types';\nimport SHOP_DATA  from '../../data/shop.data';\n\nconst initialShop ={\n    shopItems:SHOP_DATA,\n    routeName:'',\n    cartItems:[],\n    cCurrentItem:null,\n    cItemsCount:0,\n    cTotalPrice:0\n}\nconst _updateShopItems = (shopItems,action)=>{\n\n   const categroy = shopItems.find(item => item.routeName === action.payload.routeName);\n   const items = categroy.items.map(item=> {\n        if(item.id === action.payload.id){\n            return {\n                ...item,\n                count:1,\n                inCart:true\n            }\n        }else {\n            return {\n                ...item\n            }\n        }\n    });\n   return {...categroy,items:items};\n}\n\n const shopReducer = (state = initialShop , action) => {\n    switch (action.type) {\n        case ShopActionsDIC.INT_SHOP_ITEMS:\n            return state;\n\n        case ShopActionsDIC.ADD_ITEM_TO_CART: \n        return {\n            ...state,\n            shopItems: state.shopItems.map(categroy=> {\n                if(categroy.routeName === action.payload.routeName){\n                    return _updateShopItems(state.shopItems,action);\n                }else return categroy\n\n            }),\n            cartItems:[...state.cartItems,{...action.payload,count:1,inCart:true}],\n            cItemsCount:state.cItemsCount +1,\n            cTotalPrice: state.cTotalPrice + action.payload.price\n        }\n        case ShopActionsDIC.GET_ALL_ITEMS:\n            return state;\n    \n        default:\n            return state;\n    }\n}\n\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}