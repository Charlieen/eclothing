{"ast":null,"code":"import { ShopActionsDIC } from './shop.types';\nimport SHOP_DATA from '../../data/shop.data.normalization';\nconst initialShop = {\n  shopItems: []\n};\n\nconst _updateShopItems = (shopItems, action) => {\n  const categroy = shopItems.find(item => item.routeName === action.payload.routeName);\n  const items = categroy.items.map(item => {\n    if (item.id === action.payload.id) {\n      return { ...item,\n        count: 1,\n        inCart: true\n      };\n    } else {\n      return { ...item\n      };\n    }\n  });\n  return { ...categroy,\n    items: items\n  };\n};\n\nconst _updateCartItems = (cartItems, item) => {\n  debugger;\n  let result;\n  const exist = cartItems.filter(i => i.id === item.id).length === 1;\n\n  if (exist) {\n    result = cartItems.map(i => {\n      if (i.id === item.id) {\n        return { ...i,\n          count: i.count + 1\n        };\n      } else return i;\n    });\n  } else {\n    result = [...cartItems, { ...item,\n      count: 1,\n      inCart: true\n    }];\n  }\n\n  return result;\n};\n\nconst shopReducer = (state = initialShop, action) => {\n  switch (action.type) {\n    case ShopActionsDIC.INT_SHOP_ITEMS:\n      return { ...state\n      };\n\n    case ShopActionsDIC.GET_QUICK_VIEW:\n      return { ...state,\n        quickView: !state.quickView\n      };\n\n    case ShopActionsDIC.ADD_ITEM_TO_CART:\n      return { ...state,\n        shopItems: state.shopItems.map(categroy => {\n          if (categroy.routeName === action.payload.routeName) {\n            return _updateShopItems(state.shopItems, action);\n          } else return categroy;\n        }),\n        cartItems: _updateCartItems(state.cartItems, action.payload),\n        cItemsCount: state.cItemsCount + 1,\n        cTotalPrice: state.cTotalPrice + action.payload.price\n      };\n\n    case ShopActionsDIC.GET_ALL_ITEMS:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/redux/shop/shop.reducer.js"],"names":["ShopActionsDIC","SHOP_DATA","initialShop","shopItems","_updateShopItems","action","categroy","find","item","routeName","payload","items","map","id","count","inCart","_updateCartItems","cartItems","result","exist","filter","i","length","shopReducer","state","type","INT_SHOP_ITEMS","GET_QUICK_VIEW","quickView","ADD_ITEM_TO_CART","cItemsCount","cTotalPrice","price","GET_ALL_ITEMS"],"mappings":"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","sourcesContent":["import { ShopActionsDIC } from './shop.types';\nimport SHOP_DATA  from '../../data/shop.data.normalization';\n\nconst initialShop ={\n    shopItems:[]\n\n}\nconst _updateShopItems = (shopItems,action)=>{\n\n   const categroy = shopItems.find(item => item.routeName === action.payload.routeName);\n   const items = categroy.items.map(item=> {\n        if(item.id === action.payload.id){\n            return {\n                ...item,\n                count:1,\n                inCart:true\n            }\n        }else {\n            return {\n                ...item\n            }\n        }\n    });\n   return {...categroy,items:items};\n}\n\nconst _updateCartItems = (cartItems,item)=>{\n    debugger;\n    let result;\n    const exist = cartItems.filter(i => i.id === item.id).length === 1;\n\n    if(exist){\n        result = cartItems.map(i =>{\n            if(i.id === item.id) {\n                return {...i,count:i.count+1}\n            }else return i;\n        });\n    }else {\n        result = [...cartItems,{...item,count:1,inCart:true}];\n    }\n\n    return result;\n}\n\n const shopReducer = (state = initialShop , action) => {\n    switch (action.type) {\n        case ShopActionsDIC.INT_SHOP_ITEMS:\n            return {...state,};\n\n        case ShopActionsDIC.GET_QUICK_VIEW:\n            return {...state,\n                quickView: ! state.quickView\n            }    \n\n        case ShopActionsDIC.ADD_ITEM_TO_CART: \n        return {\n            ...state,\n            shopItems: state.shopItems.map(categroy=> {\n                if(categroy.routeName === action.payload.routeName){\n                    return _updateShopItems(state.shopItems,action);\n                }else return categroy\n\n            }),\n            cartItems:_updateCartItems(state.cartItems,action.payload),\n            cItemsCount:state.cItemsCount +1,\n            cTotalPrice: state.cTotalPrice + action.payload.price\n        }\n        case ShopActionsDIC.GET_ALL_ITEMS:\n            return state;\n    \n        default:\n            return state;\n    }\n}\n\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}