{"ast":null,"code":"import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { config } from '../api/firebase';\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(userAuth);\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(!snapShot.exists);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    console.log(displayName, email, createdAt);\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  console.log('userRef ', userRef);\n  console.log('snapShot ', snapShot);\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionShopRef = firestore.collection('shop');\n  const collectionRef = collectionShopRef.collection(collectionKey);\n  collectionRef.add(objectsToAdd); // console.log(collectionRef);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/firebase/firebase.util.js"],"names":["firebase","config","initializeApp","createUserProfileDocument","userAuth","additionalData","console","log","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionShopRef","collection","collectionRef","add","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAAQC,MAAR,QAAqB,iBAArB;AAGAD,QAAQ,CAACE,aAAT,CAAuBD,MAAvB;AAEA,OAAO,MAAME,yBAAyB,GAAG,OAAOC,QAAP,EAAgBC,cAAhB,KAAmC;AACxE,MAAG,CAACD,QAAJ,EAAc;AACdE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAMI,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQN,QAAQ,CAACO,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAIAP,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACK,QAAQ,CAACE,MAAtB;;AAEA,MAAG,CAACF,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAsBZ,QAA5B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AAEAZ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,WAAZ,EAAwBC,KAAxB,EAA8BC,SAA9B;;AAEI,QAAI;AACA,YAAMT,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGZ;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOe,KAAP,EAAc;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCa,KAAK,CAACC,OAAzC;AACH;AACR;;AAEDf,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,OAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBK,QAAxB;AACA,SAAOJ,OAAP;AACH,CAhCM;AAiCP,OAAO,MAAMc,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAA+B;AACpE,QAAMC,iBAAiB,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,MAArB,CAA1B;AACA,QAAMC,aAAa,GAAGF,iBAAiB,CAACC,UAAlB,CAA6BH,aAA7B,CAAtB;AAEAI,EAAAA,aAAa,CAACC,GAAd,CAAkBJ,YAAlB,EAJoE,CAKrE;AACF,CANM;AAQP,OAAO,MAAMK,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMpB,SAAS,GAAGT,QAAQ,CAACS,SAAT,EAAlB;AAEP,MAAMqB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAOC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAIP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport {config} from '../api/firebase';\n\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth,additionalData) => {\n    if(!userAuth) return;\n    console.log(userAuth);\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n\n\n    console.log(!snapShot.exists);\n\n    if(!snapShot.exists){\n        const {displayName,email} = userAuth;\n        const createdAt = new Date();\n\n        console.log(displayName,email,createdAt);\n\n            try {\n                await userRef.set({\n                    displayName,\n                    email,\n                    createdAt,\n                    ...additionalData\n                })\n            } catch (error) {\n                console.log('error creating user', error.message);\n            }\n    }\n\n    console.log('userRef ',userRef);\n    console.log('snapShot ',snapShot);\n    return userRef;\n}\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd)=>{\n    const collectionShopRef = firestore.collection('shop');\n    const collectionRef = collectionShopRef.collection(collectionKey);\n\n    collectionRef.add(objectsToAdd);\n   // console.log(collectionRef);\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account'});\n\nexport const  signInWithGoogle = ()=> auth.signInWithPopup(provider);\n\n\n\nexport default firebase;\n\n  "]},"metadata":{},"sourceType":"module"}