{"ast":null,"code":"import { all, call } from 'redux-saga/effects';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\n/**\n * Creates an Effect description that instructs the middleware to run multiple\n * Effects in parallel and wait for all of them to complete. It's quite the\n * corresponding API to standard\n * [`Promise#all`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise/all).\n *\n * #### Example\n *\n * The following example runs two blocking calls in parallel:\n *\n *    import { fetchCustomers, fetchProducts } from './path/to/api'\n *    import { all, call } from `redux-saga/effects`\n *\n *    function* mySaga() {\n *      const [customers, products] = yield all([\n *        call(fetchCustomers),\n *        call(fetchProducts)\n *      ])\n *    }\n */\n\nexport default function* rootSaga() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/redux/root-saga.js"],"names":["all","call","fetchCollectionsStart","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAAyB,oBAAzB;AACA,SAASC,qBAAT,QAAqC,mBAArC;AAEA;;;;;;;;;;;;;;;;;;;;;AAoBA,eAAe,UAAUC,QAAV,GAAoB;AAC/B,QAAMH,GAAG,CAAC,CAACC,IAAI,CAACC,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { all, call} from 'redux-saga/effects';\nimport { fetchCollectionsStart} from './shop/shop.sagas';\n\n/**\n * Creates an Effect description that instructs the middleware to run multiple\n * Effects in parallel and wait for all of them to complete. It's quite the\n * corresponding API to standard\n * [`Promise#all`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise/all).\n *\n * #### Example\n *\n * The following example runs two blocking calls in parallel:\n *\n *    import { fetchCustomers, fetchProducts } from './path/to/api'\n *    import { all, call } from `redux-saga/effects`\n *\n *    function* mySaga() {\n *      const [customers, products] = yield all([\n *        call(fetchCustomers),\n *        call(fetchProducts)\n *      ])\n *    }\n */\nexport default function* rootSaga(){\n    yield all([call(fetchCollectionsStart)]);\n}"]},"metadata":{},"sourceType":"module"}