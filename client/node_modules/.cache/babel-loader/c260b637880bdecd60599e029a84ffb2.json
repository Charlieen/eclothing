{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist'; // import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root.sage';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, compose(applyMiddleware(...middlewares), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/dzgygmdhx/work/react-course/ecloth/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","logger","rootReducer","persistStore","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","window","__REDUX_DEVTOOLS_EXTENSION__","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAwCC,OAAxC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAsB,aAAtB;AAGA,MAAMC,cAAc,GAAEF,oBAAoB,EAA1C;AAEA,MAAMG,WAAW,GAAE,CAACD,cAAD,CAAnB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACI,WAAD,EAAcF,OAAO,CAACD,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,EACrDM,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EADc,CAArB,CAAzB;AAGNR,cAAc,CAACS,GAAf,CAAmBV,QAAnB;AAGD,OAAO,MAAMW,SAAS,GAAGb,YAAY,CAACS,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAOI,EAAAA;AAAP,CAAf","sourcesContent":["import { createStore, applyMiddleware  ,compose} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\n// import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga  from './root.sage';\n\n\nconst sagaMiddleware =createSagaMiddleware();\n\nconst middlewares =[sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development'){\n    middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, compose(applyMiddleware(...middlewares),\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\n sagaMiddleware.run(rootSaga);\n \n\nexport const persistor = persistStore(store);\n\nexport default {store,persistor};"]},"metadata":{},"sourceType":"module"}